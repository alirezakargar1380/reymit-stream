<!-- saved from url=(0141)https://reymit.ir/overlay/?key=OGIwNWJhYmJmNWE4ODlmYmY3MXVjcFUwZFJiMW5DUUR6cGVySCs0bVJIY3U0VndLV3NweVRWWjFiM1pXb3Y5bFVaV2tSYThRVitWL0dNbHk%3D -->
<html lang="fa_IR" dir="rtl">
<link type="text/css" rel="stylesheet" id="dark-mode-custom-link">
<link type="text/css" rel="stylesheet" id="dark-mode-general-link">
<style lang="en" type="text/css" id="dark-mode-custom-style"></style>
<style lang="en" type="text/css" id="dark-mode-native-style"></style>
<style lang="en" type="text/css" id="dark-mode-native-sheet"></style>

<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<script type="text/javascript">
		function topersiannumber(num) {
			return String(num).replace(/1/g, "۱").replace(/2/g, "۲").replace(/3/g, "۳").replace(/4/g, "۴").replace(/5/g, "۵").replace(/6/g, "۶").replace(/7/g, "۷").replace(/8/g, "۸").replace(/9/g, "۹").replace(/0/g, "۰");
		}
		function reverseSTR(s) {
			return s.split("").reverse().join("");
		}
		function NumberFormater(num) {
			str = reverseSTR(String(num).replace(/,/g, ""));
			if (str != "") {
				ret = "";
				morespace = 0;
				for (var i = 0; i < Math.ceil(str.length / 3); i++) {
					ret = ret + str.substring((i * 3), (i * 3) + 3);
					if (str.length - (i * 3) > 3) {
						ret += ",";
						morespace++;
					}
				}
				return reverseSTR(ret);
			}
		}

		var rtlChar = /[\u0590-\u083F]|[\u08A0-\u08FF]|[\uFB1D-\uFDFF]|[\uFE70-\uFEFF]/mg;
		function DirectionCorrector(element) {
			var isRTL = element.innerHTML.match(rtlChar);
			if (isRTL !== null) {
				element.style.direction = 'rtl';
			} else {
				element.style.direction = 'ltr';
			}
		}

		function compareValues(key, order = 'asc', force_int = false) {
			return function innerSort(a, b) {
				if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {
					return 0;
				}

				const varA = ((force_int ? parseInt(a[key]) : (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key]));
				const varB = ((force_int ? parseInt(b[key]) : (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key]));

				let comparison = 0;
				if (varA > varB) {
					comparison = 1;
				} else if (varA < varB) {
					comparison = -1;
				}
				return (
					(order === 'desc') ? (comparison * -1) : comparison
				);
			};
		}

		function isRTL(s) {
			var ltrChars = 'A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02B8\u0300-\u0590\u0800-\u1FFF' + '\u2C00-\uFB1C\uFDFE-\uFE6F\uFEFD-\uFFFF',
				rtlChars = '\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC',
				rtlDirCheck = new RegExp('^[^' + ltrChars + ']*[' + rtlChars + ']');

			return rtlDirCheck.test(s);
		};
		const appurl = "http://localhost:3000/"
	</script>
	<style type="text/css">
		body {
			font-family: 'Vazir', 'Lato';
			margin: 0px;
			padding: 0px;
			color: #fff;
			height: 100%;
			overflow: hidden;
			animation: animha 1s infinite;
		}

		@keyframes animha {

			0%,
			100% {
				transform: scale(1);
			}

			50% {
				transform: scale(1)
			}
		}

		@font-face {
			font-family: "yekan";
			src: url("fonts/iranyekanwebregular.woff");
			src: url("fonts/iranyekanwebregular.woff") format("embedded-opentype"),
				url("fonts/iranyekanwebregular.woff") format("woff"),
				url("fonts/iranyekanwebregular.woff") format("truetype"),
				url("fonts/iranyekanwebregular.woff") format("svg");
			font-weight: normal;
			font-style: normal
		}

		@font-face {
			font-family: 'Lato';
			font-style: normal;
			font-weight: 400;
			src: local('Lato Regular'), local('Lato-Regular'), url("fonts/iranyekanwebregular.woff") format('woff2');
			unicode-range: U+0100-024F, U+1E00-1EFF, U+20A0-20AB, U+20AD-20CF, U+2C60-2C7F, U+A720-A7FF;
		}

		/* latin */
		@font-face {
			font-family: 'Lato';
			font-style: normal;
			font-weight: 400;
			src: local('Lato Regular'), local('Lato-Regular'), url("fonts/iranyekanwebregular.woff") format('woff2');
			unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215, U+E0FF, U+EFFD, U+F000;
		}

		@font-face {
			font-family: 'Vazir';
			font-weight: normal;
			src: url("/fonts/iranyekanwebregular.woff") format("woff"),
				url("/fonts/iranyekanwebregular.woff") format("truetype");
		}

		@font-face {
			font-family: 'Vazir-Bold';
			font-weight: bold;
			src: url("fonts/Vazir-Bold-FD.woff") format("woff"), url("fonts/Vazir-Bold-FD.ttf") format("truetype");
		}

		@font-face {
			font-family: 'Vazir-Light';
			font-weight: lighter;
			src: url("fonts/Vazir-Light-FD.woff") format("woff"), url("fonts/Vazir-Light-FD.ttf") format("truetype");
		}

		@font-face {
			font-family: 'Vazir-WOL';
			font-weight: lighter;
			src: url("fonts/Vazir-Light-WOL.woff") format("woff"), url("fonts/Vazir-Light-WOL.ttf") format("truetype");
		}

		@font-face {
			font-family: 'Vazir-WOL';
			font-weight: normal;
			src: url("fonts/Vazir-WOL.woff") format("woff"), url("fonts/Vazir-WOL.ttf") format("truetype");
		}

		@font-face {
			font-family: 'Vazir-WOL';
			font-weight: bold;
			src: url("fonts/Vazir-Bold-WOL.woff") format("woff"), url("fonts/Vazir-Bold-WOL.ttf") format("truetype");
		}

		@font-face {
			font-family: 'Material Icons';
			font-style: normal;
			font-weight: 400;
			src: url("fonts/iranyekanwebregular.woff") format('woff'), url("fonts/iranyekanwebregular.woff") format('truetype');
		}

		.alertbox {
			transition: .5s all;
			opacity: 0;
			background-repeat: no-repeat;
			background-position: 50% 0;
			display: inline-block;
			position: relative;
		}

		.alertbox .alertmediaholder {}

		.alertbox .alertmediaholder .rightimage {
			vertical-align: middle;
			text-align: center;
			position: absolute;
			top: 50%;
			left: 100%;
			transform: translate(0, -50%);
			z-index: -1;
		}

		.alertbox .alertmediaholder .leftimage {
			vertical-align: middle;
			text-align: center;
			position: absolute;
			top: 50%;
			right: 100%;
			transform: translate(0, -50%);
			z-index: -1;
		}

		.alertbox .alertmediaholder {
			display: inline-block;
			vertical-align: middle;
			text-align: center;
			position: relative;
		}

		.alertbox .alertmediaholder .topimage {
			vertical-align: middle;
			text-align: center;
			position: absolute;
			bottom: 100%;
			left: 50%;
			transform: translate(-50%, 0);
			z-index: -1;
		}

		.alertbox .alertmediaholde .middleimage {
			z-index: -1;
		}

		.alertbox .alertmediaholder .bottomimage {
			vertical-align: middle;
			text-align: center;
			position: absolute;
			top: 100%;
			left: 50%;
			transform: translate(-50%, 0);
			z-index: -1;
		}

		.alertbox .details {
			overflow-wrap: break-word;
			margin: 15px 0 20px 0;
			max-width: 450px;
			font-size: 18px;
			display: inline-block;
			background-color: rgba(0, 0, 0, 0.7);
			padding: 5px 10px;
			border-radius: 10px;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 1), 0px 2px 3px rgba(0, 0, 0, 1);
			text-align: justify;
			-moz-text-align-last: center;
			text-align-last: center;
			box-shadow: 0px 3px 10px rgba(0, 0, 0, .7);
		}

		.alertbox .donationinfo,
		.alertbox .alertinfo {
			position: absolute;
			top: 50%;
			left: 50%;
			white-space: nowrap;
			transform: translate(-50%, -50%);
			text-align: center;
			overflow: hidden;
			opacity: 1;
		}

		.alertbox .donationinfo .name,
		.alertbox .alertinfo .name {
			font-size: 26px;
			font-weight: bold;
			display: inline-block;
			line-height: 41px;
			padding: 6px 0 0 0;
			box-sizing: border-box;
			text-shadow: 0px 2px 4px rgba(0, 0, 0, 0.6);
			overflow: hidden;
		}

		.alertbox .donationinfo .detail,
		.alertbox .alertinfo .detail {
			height: 39px;
			font-size: 18px;
			line-height: 30px;
			display: inline-block;
			padding: 0px 0 0 0;
			margin: 0 auto;
			box-sizing: border-box;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
			overflow: hidden;
		}

		#verticallist {
			/*transition: .5s all;*/
			background-repeat: no-repeat;
			background-position: 50%;
			position: absolute;
			top: 50%;
			right: unset;
			left: 50%;
			bottom: unset;
			transform: translateX(-50%) translateY(-50%);
		}

		#verticallist #verticallistholder {
			box-sizing: border-box;
			font-size: 15px;
			font-weight: bold;
			height: 200px;
			overflow: hidden;
			padding: 10px 0;
			text-align: center;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
			width: 300px;
		}

		#verticallist #verticallistholder .line {
			display: block;
			overflow: hidden;
			height: 27px;
			line-height: 27px;

		}

		#verticallist #verticallistholder .name {
			display: inline-block;
			width: 150px;
			padding: 0 2px;
			box-sizing: border-box;
			text-overflow: ellipsis;
			white-space: nowrap;
			direction: ltr;
			overflow: hidden;
			vertical-align: top;
		}

		#verticallist #verticallistholder .amount {
			display: inline-block;
			display: inline-block;
			width: 110px;
			text-overflow: ellipsis;
			direction: rtl;
			overflow: hidden;
			vertical-align: top;
		}

		#verticallist #verticallistholder .seperator {
			display: inline-block;
			width: 20px;
			overflow: hidden;
			vertical-align: top;
		}


		#horizontallist {
			/*transition: .5s all;*/
			background-repeat: no-repeat;
			background-position: 50%;
			position: absolute;
			top: 50%;
			right: unset;
			left: 50%;
			bottom: unset;
			transform: translateX(-50%) translateY(-50%);
		}

		#horizontallist #horizontallistholder {
			box-sizing: border-box;
			height: 27px;
			overflow: hidden;
			text-align: center;
			display: flex;
			width: 300px;
		}

		#horizontallist #horizontallistholder .items {
			box-sizing: border-box;
			font-size: 15px;
			font-weight: bold;
			height: 27px;
			white-space: nowrap;
			text-align: center;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
		}

		#horizontallist #horizontallistholder .items .line {
			display: inline-block;
			margin: 0 15px;
			overflow: hidden;
			height: 27px;
			line-height: 27px;

		}

		#horizontallist #horizontallistholder .items .name {
			display: inline-block;
			max-width: 150px;
			padding: 0 2px;
			text-overflow: ellipsis;
			white-space: nowrap;
			direction: ltr;
			overflow: hidden;
			vertical-align: top;
		}

		#horizontallist #horizontallistholder .items .amount {
			display: inline-block;
			/*width: 110px;*/
			padding: 0 2px;
			text-overflow: ellipsis;
			direction: rtl;
			overflow: hidden;
			vertical-align: top;
		}

		#horizontallist #horizontallistholder .items .seperator {
			display: inline-block;
			padding: 0 5px;
			overflow: hidden;
			vertical-align: top;
		}




		.topsholder {
			bottom: unset;
			white-space: nowrap;
			display: inline-block;
			font-size: 16px;
			font-weight: bold;
			height: 27px;
			left: 50%;
			line-height: 27px;
			padding: 0 5px;
			position: absolute;
			right: unset;
			text-align: center;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
			vertical-align: top;
		}

		.topsholder .name {
			height: 27px;
			max-width: 85px;
			line-height: 27px;
			white-space: nowrap;
			text-align: center;
			display: inline-block;
			text-overflow: ellipsis;
			direction: ltr;
			overflow: hidden;
			padding: 0 5px;
			vertical-align: bottom;
		}

		.topsholder .amount {
			height: 27px;
			line-height: 27px;
			text-align: center;
			display: inline-block;
			padding: 0 2px;
			vertical-align: bottom;
		}

		.flist {
			bottom: unset;
			white-space: nowrap;
			display: inline-block;
			font-size: 16px;
			font-weight: bold;
			height: 27px;
			left: 50%;
			line-height: 27px;
			padding: 0 5px;
			position: absolute;
			right: unset;
			text-align: center;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
			vertical-align: top;
		}

		.flist .name {
			height: 27px;
			max-width: 85px;
			line-height: 27px;
			white-space: nowrap;
			text-align: center;
			display: inline-block;
			text-overflow: ellipsis;
			direction: ltr;
			overflow: hidden;
			padding: 0 5px;
			vertical-align: bottom;
		}

		.flist .amount {
			height: 27px;
			line-height: 27px;
			text-align: center;
			display: inline-block;
			padding: 0 2px;
			vertical-align: bottom;
		}

		.flist .seperator {
			display: inline-block;
			padding: 0 5px;
			overflow: hidden;
			vertical-align: top;
		}

		.totalholder {
			bottom: unset;
			white-space: nowrap;
			display: inline-block;
			font-size: 16px;
			font-weight: bold;
			height: 27px;
			left: 50%;
			line-height: 27px;
			padding: 0 5px;
			position: absolute;
			right: unset;
			text-align: center;
			text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.6);
			top: 50%;
			transform: translateX(-50%) translateY(-50%);
			vertical-align: top;
		}

		.totalholder .amount {
			height: 27px;
			line-height: 27px;
			text-align: center;
			display: inline-block;
			padding: 0 2px;
			vertical-align: middle;
		}

		.goalholder {
			transition: opacity .3s;
			opacity: 0;
			padding: 35px;
			top: 50%;
			right: unset;
			left: 50%;
			bottom: unset;
			position: absolute;
			transform: translateX(-50%) translateY(-50%);
		}

		.goalholder .inner {
			transition: opacity .3s;
			text-align: center;


			min-width: 300px;

			padding: 5px;
			background-color: rgba(0, 0, 0, 0.7);
			border-radius: 10px;

			/* box-shadow: 0px 3px 10px rgba(0, 0, 0, .7); */

		}

		.goalholder .inner .goaltitle {
			/* text-shadow: 0px 2px 3px rgba(0, 0, 0, 1), 0px 2px 3px rgba(0, 0, 0, 1); */
			color: #fff;
			font-size: 16px;
		}

		.goalholder .inner .progressbarholder {
			width: 99%;
			height: 20px;
			line-height: 23px;
			border-radius: 11px;
			position: relative;
			margin: 0 auto;
			overflow: hidden;
			color: #fff;
			text-align: center;
			font-size: 15px;
			border: rgba(255, 255, 255, 0.39) 1px solid;
		}

		.goalholder .inner .progressbar {
			transition: 1s all;
			height: 100%;
			overflow: hidden;
			width: 50%;
			min-width: 30px;
			max-width: 100%;
			line-height: inherit;
			border-radius: 10px;
			background: rgb(255, 255, 255);
			color: #000;
		}

		.goalholder .inner .counter {
			font-size: 12px;
			color: rgba(255, 255, 255, 0.73);
		}
	</style>
	<script src="<%= address %>/assets/jquery.min.js.download"></script>
	<script type="text/javascript" src="<%= address %>/assets/jquery.min.js(1).download"></script>
	<script src="<%= address %>/assets/jquery-ui.js.download"></script>
	<script type="text/javascript">
		var doresize = true;

		function Resize() {
			if (doresize == false) {
				document.getElementById("goalholder").style.transform = "translateX(-50%) translateY(-50%)";
			} else {
				if (((document.getElementById("goalholder").clientWidth) / (document.getElementById("goalholder").clientHeight)) > (document.body.clientWidth / document.body.clientHeight)) {
					document.getElementById("goalholder").style.transform = "translateX(-50%) translateY(-50%) scale(" + (document.body.clientWidth / (document.getElementById("goalholder").clientWidth)) + ")";
				} else {
					document.getElementById("goalholder").style.transform = "translateX(-50%) translateY(-50%) scale(" + (document.body.clientHeight / (document.getElementById("goalholder").clientHeight)) + ")";
				}
			}

		}

		$(document).ready(function () {
			Resize();
		});
	</script>
</head>

<body onresize="Resize()" style="" data-new-gr-c-s-check-loaded="14.1067.0" data-gr-ext-installed="">
	<div class="goalholder" id="goalholder"
		style="display: block; opacity: 1; transform: translateX(-50%) translateY(-50%) scale(1.84211);">
		<div class="inner" style="background-color: rgba(0, 0, 0, 0.7); border-radius: 20px;">
			<div id="goaltitle" class="goaltitle">هدف: <div style="display: inline;" class="goalname"></div>
			</div>
			<div class="progressbarholder"
				style="background-color: rgba(0, 0, 0, 0); border-radius: 11px; border: 1px solid rgba(255, 255, 255, 0.39); height: 20px; line-height: 23px; direction: ltr;">
				<div id="goalprogressbar" class="progressbar"
					style="width: 0%; background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-size: 15px; border-radius: 10px; min-width: 30px;">
					<div style="display: inline;" class="goalpercent">50</div>%
				</div>
			</div>
			<div class="counter" id="goalcounter" style="color: rgba(255, 255, 255, 0.73); font-size: 12px;">
				<div style="display: inline;" class="goalcurrent"></div> از <div style="display: inline;"
					class="goalgoal"></div> تومان (%<div style="display: inline;" class="goalpercent"></div>)
			</div>
		</div>
	</div>

	<style type="text/css" id="custom-css"></style>
	<script type="text/javascript" id="custom-js"></script>

</body>
<grammarly-desktop-integration data-grammarly-shadow-root="true">
</grammarly-desktop-integration>
<script src="<%= address %>/assets/jquery.min.js.download"></script>
<script src="<%= address %>/assets/socket.io.js"></script>
<script>
	let dollarUSLocale = Intl.NumberFormat('en-US');
	const urlParams = new URLSearchParams(window.location.search);
	const key = urlParams.get('key');
	const socket = io("<%= socket %>", {
		timeout: 60 * 1000,
		reconnection: true,
		forceNew: true,
		query: {
			key: key,
			falsdjfl: "aksdjfkljasd"
		}
	});
	socket.connect();

	function update_targets(params) {
		// active target
		if (params.active) { $("#goalholder").css("display", "unset") } else {
			$("#goalholder").css("display", "none")
			return
		}
		// show target
		if (params.show_target) { $(".goaltitle").css("display", "block") } else {
			$(".goaltitle").css("display", "none")
		}
		// percentage
		$(".goalpercent")[0].innerHTML = params.percentage_of_progress
		$(".goalpercent")[1].innerHTML = params.percentage_of_progress
		$("#goalprogressbar").css("width", `${params.percentage_of_progress}%`)
		// target title
		$(".goalname")[0].innerHTML = params.target_title
		// amounts
		$(".goalgoal")[0].innerHTML = dollarUSLocale.format(params.target_amount)
		$(".goalcurrent")[0].innerHTML = dollarUSLocale.format(params.amount_until_now)
	}

	socket.on("toolsTargets_mainSettings", ({ message, percentage_of_progress }) => {
		update_targets({
			...message,
			percentage_of_progress: percentage_of_progress
		})
	})


	function update_appearance({
		target_background_box,
		target_progress_bar,
		target_title,
		target_detail
	}) {

		if (target_background_box.show_background) {
			// bg
			$(".inner").css("background-color", target_background_box.background_color)
			$(".inner").css("border-radius", target_background_box.radius)
			if (target_background_box.show_shadow) {
				$(".inner").css("box-shadow", "0px 3px 10px rgba(0, 0, 0, .7)")
			} else {
				$(".inner").css("box-shadow", "")
			}
		} else {
			$(".inner").css("background-color", "#ffffff")
		}

		if (target_progress_bar.show_progress_bar) {
			$(".progressbarholder").css("display", "block")

			$("#goalprogressbar").css("background-color", target_progress_bar.bar_color)
			$("#goalprogressbar").css("color", target_progress_bar.bar_text_color)
			$("#goalprogressbar").css("font-size", `${target_progress_bar.font_size}px`)

			$(".progressbarholder").css("border-color", target_progress_bar.stroke_color)
			$(".progressbarholder").css("border-radius", target_progress_bar.radius_of_holder_bar)
			$(".progressbarholder").css("background-color", target_progress_bar.bar_background_color)
			$(".progressbarholder").css("height", target_progress_bar.bar_height)

			$(".progressbar").css("border-radius", target_progress_bar.radius_of_inside_bar)
			$(".progressbar").css("min-width", target_progress_bar.min_width_of_process_bar)

			$(".goaltitle").css("margin-bottom", 5)
		} else {
			$(".progressbarholder").css("display", "none")
		}

		if (target_title.show_target_title) {
			$("#goaltitle").css("display", "")
			$("#goaltitle").css("font-size", target_title.font_size)
			$(".goaltitle").css("color", target_title.text_color)

			if (target_title.show_text_shadow) {
				$(".goaltitle").css("text-shadow", "0px 2px 3px rgb(0 0 0), 0px 2px 3px rgb(0 0 0)")
			} else {
				$(".goaltitle").css("text-shadow", "")
			}
		} else {
			$("#goaltitle").css("display", "none")
		}

		if (target_detail.show_target_detail) {
			$(".counter").css("display", "")
			$("#goalcounter").css("color", target_detail.text_color)
			$("#goalcounter").css("font-size", target_detail.font_size)
		} else {
			$("#goalcounter").css("display", "none")
		}

		console.log(target_detail)
	}

	socket.on("toolsTargets_appearanceSettings", ({ message }) => {
		console.log(message)
		update_appearance(message)
	})
</script>

</html>